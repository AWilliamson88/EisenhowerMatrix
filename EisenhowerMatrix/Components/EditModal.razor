@using DataModels.Models



<button type="button" class="btn btn-outline-info item-button float-end me-2 fw-bold"
    data-bs-toggle="modal" data-bs-target="#editModal" @onclick="@LoadModal">
	<i class="fa fa-pencil-square-o fw-bold" aria-hidden="true"></i>
    <span class="item-button-text">Edit</span>
</button>

@if (Item != null)
{
	
	<div class="modal fade show" id="editModal" tabindex="-1" aria-labelledby="editModal" aria-hidden="true">
	<div class="editmodal-backdrop-overlay" @onclick="@CloseModal"></div>
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">Edit this item.</h4>
					<button type="button" class="btn-close"
						@onclick="@CloseModal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="container-fluid">
						<EditForm Model="@Item">
							<div>
								<h5>Title:</h5>
								<InputTextArea cols="40" @bind-Value="@Item.Title"></InputTextArea>
							</div>
							<hr>
							<div>
								<h5>Description:</h5>
								<InputTextArea cols="40" @bind-Value="@Item.Description"></InputTextArea>
							</div>
						</EditForm>
						
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-success" @onclick="@Save" >
						Save
					</button>
					<button type="button" class="btn" @onclick="@CloseModal">
						Close
					</button>
				</div>
			</div>
		</div>
	</div>
	
}

@code {

	[Parameter]
	public EMListItem CurrentItem { get; set; }

	EMListItem Item;

	[Parameter]
	public EventCallback<EMListItem> SaveChanges { get; set; }

	void Save(MouseEventArgs e)
	{
		CurrentItem.Title = Item.Title;
		CurrentItem.Description = Item.Description;
		SaveChanges.InvokeAsync(CurrentItem);
		Item = new EMListItem();
		StateHasChanged();
	}

	void LoadModal()
	{
		Item = new EMListItem();
		Item.Title = CurrentItem.Title; 
		Item.Description = CurrentItem.Description;
	}

	void CloseModal()
	{
		Item = new EMListItem();
		StateHasChanged();
	}

}
